x,y
import, import pandas as pd     from scipy.stats import binom    poisson     import math
CLT - Conditions 1, Independence Condition: Sampled observations must be independent. This is difficult to verify but is more likely if random sampling/assignment is used and if sampling without replacement n < 10% of the population
CLT - Conditions 2, Success-Failure Condition (Sample Size): There should be at least 10 expected successes and 10 expected failures in the observed sample
CLT - Conditions 3, Sample Size/Skew Condition (Distribution): Either the population distribution is normal or if the population distribution is skewed the sample size is large. Samples size must be (n>=30) to use normal distributions
CLT Success Failure Condition, when np ≥ 10 and n(1 − p) ≥ 10 which is called the success-failure condition. The larger the n the smaller the error
Python CLT, n = 500  p = 0.75  SF1 = n*p  SF2 = n*(1- p)  if (SF1>=10) & (SF2>=10):  print('Success Failure Condition is Satisfied')  else:  print('No Success')
Python CLT Confidence Interval, 80% of students love the statistics course. 25 students are chosen at random. 95% of the sampled students would have a Phat between what value and what value?  p=0.8  n=25  SE = pow(p*(1-p)/n  1/2)  print('SE' SE)  SD = 2 #95%   print('Upper Limit', p + (SD*SE))   print('Lower Limit', p - (SD*SE))
Python Poisson, k5 = 3 #day   Lambda5 = 2/7 #2weekly, changing a day   print(poisson.pmf(k5   Lambda5))
Python Poisson Cumulative, k6 = 3   Lambda6 = 2   print(poisson.cdf(k6 Lambda6))
Python Binomial, A rare disease affects 1 in 20000. In a random sample of 1000. what is theprobability that exactly two have this disease?   k=2   n=1000   p=1/20000   print(binom.pmf(k n p))
p-value, #What is the probability that the number of women chosen from a sample of 50 would be 36 or more?    n=50 #samples   k=36    # of scenarios   pval = math.factorial(n) / ( math.factorial(k) * math.factorial(n-k) ) print(pval)  #probability of one scenario  Pw=0.5 #P(W)   Ph=0.5 #P(M)   dif_k = n-k     prob=(Pw**k) * (Ph**dif_k)   #P-value   print(prob*pval*100)